name: build and cache machines and homes
on:
  workflow_dispatch:
  push:
  pull_request:
env:
  ATTIC_TOKEN: ${{ secrets.ATTIC_TOKEN }}
  NIX_CONFIG: |
    show-trace = true
    experimental-features = nix-command flakes
    accept-flake-config = true
    system-features = nixos-test benchmark big-parallel kvm
    secret-key-files = ~/cache-priv-key.pem
  TERM: ansi
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets. AWS_SECRET_ACCESS_KEY }}
jobs:
  build-machines:
    strategy:
      fail-fast: false
      matrix:
        machine:
          - chunk
          - ytnix
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
        with:
          overprovision-lvm: true
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: /nix
      - name: setup binary cache key
        run: echo "${{ secrets.NIX_CACHE_SECRET_KEY }}" >> ~/cache-priv-key.pem
      - name: Install Nix
        uses: cachix/install-nix-action@v30
      - name: Sync repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: build
        run: |
          package=".#nixosConfigurations."${{ matrix.machine }}".config.system.build.toplevel"
          nix build -L "$package"
      - name: cache
        if: always()
        run: |
          nix copy ".#nixosConfigurations."${{ matrix.machine }}".config.system.build.toplevel" --to "s3://nixcache?endpoint=s3.cy7.sh"
  build-homes:
    strategy:
      fail-fast: false
      matrix:
        home:
          - yt@ytnix
          - yt@chunk
        os:
          - ubuntu-latest
          # - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
        with:
          overprovision-lvm: true
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: /nix
      - name: setup binary cache key
        run: echo "${{ secrets.NIX_CACHE_SECRET_KEY }}" >> ~/cache-priv-key.pem
      - name: Install Nix
        uses: cachix/install-nix-action@v30
      - name: Sync repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: build
        run: |
          package=".#homeConfigurations."${{ matrix.home }}".activationPackage"
          nix build -L "$package"
      - name: cache
        if: always()
        run: |
          nix copy ".#homeConfigurations."${{ matrix.home }}".activationPackage" --to "s3://nixcache?endpoint=s3.cy7.sh"
